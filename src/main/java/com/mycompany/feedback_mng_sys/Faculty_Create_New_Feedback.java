/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.feedback_mng_sys;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

public class Faculty_Create_New_Feedback extends javax.swing.JFrame {

    private Connection conn = null;
    private PreparedStatement pst = null;
    private ResultSet rs = null;
    private String query = null;
    private String loggedUserId;

    public Faculty_Create_New_Feedback(String id) {
        initComponents();
        conn = DatabaseConnector.connect();
        loggedUserId = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_fac_feedback_name = new javax.swing.JTextField();
        tf_fac_num_of_qst_in_feedback = new javax.swing.JSpinner();
        btn_fac_feedback_details_proceed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Feedback Details");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("FeedBack Details ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Name of Feedback");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Number of Questions");

        tf_fac_feedback_name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tf_fac_num_of_qst_in_feedback.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btn_fac_feedback_details_proceed.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_fac_feedback_details_proceed.setText("Proceed");
        btn_fac_feedback_details_proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fac_feedback_details_proceedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_fac_feedback_name, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(tf_fac_num_of_qst_in_feedback))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(122, 122, 122))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_fac_feedback_details_proceed)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_fac_feedback_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_fac_num_of_qst_in_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(btn_fac_feedback_details_proceed)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_fac_feedback_details_proceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fac_feedback_details_proceedActionPerformed
        // TODO add your handling code here:
        String feedbackName = tf_fac_feedback_name.getText();
        int numQuestions = (int) tf_fac_num_of_qst_in_feedback.getValue();

        if (feedbackName.isEmpty() || numQuestions <= 0) {
            // Show an error message if either field is empty or the number of questions is not greater than 0
            JOptionPane.showMessageDialog(this, "Either name is empty or number of questions are less than 1.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                String feedbackId = addFeedback(feedbackName, numQuestions);
                createFeedbackTable(feedbackId);
                JOptionPane.showMessageDialog(this, "Feedback created successfully!", "Sucess", JOptionPane.PLAIN_MESSAGE);

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btn_fac_feedback_details_proceedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Faculty_Create_New_Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Faculty_Create_New_Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Faculty_Create_New_Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Faculty_Create_New_Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Faculty_Create_New_Feedback().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_fac_feedback_details_proceed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField tf_fac_feedback_name;
    private javax.swing.JSpinner tf_fac_num_of_qst_in_feedback;
    // End of variables declaration//GEN-END:variables

    private String addFeedback(String feedbackName, int numQuestions) {
        String generatedFeedId = null; // Initialize to null indicating failure.

        try {
            query = "INSERT INTO feedbacks(feed_name, by_faculty_id, no_que) VALUES(?, ?, ?)";
            pst = conn.prepareStatement(query, PreparedStatement.RETURN_GENERATED_KEYS);
            pst.setString(1, feedbackName);
            pst.setString(2, loggedUserId);
            pst.setInt(3, numQuestions);

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                // Retrieving the generated feed_id
                ResultSet generatedKeys = pst.getGeneratedKeys();
                if (generatedKeys.next()) {
                    generatedFeedId = String.valueOf(generatedKeys.getInt(1));
                }

//            JOptionPane.showMessageDialog(this, "Success!! (feed_id: " + generatedFeedId + ")");
            } else {
                JOptionPane.showMessageDialog(this, "Something went wrong!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }

        return generatedFeedId;
    }

    private void createFeedbackTable(String feedbackId) {
        String tableName = "feedback_" + feedbackId;
        try {
            // Construct the SQL query as a string
            query = "CREATE TABLE " + tableName + " (que_id INT AUTO_INCREMENT PRIMARY KEY, question VARCHAR(255), ops_type VARCHAR(255))";

            // Execute the SQL query using your database connection
            Statement stmt = conn.createStatement();
            stmt.executeUpdate(query);

            // Close the statement
            stmt.close();
//        JOptionPane.showMessageDialog(this, "Table created succesfuly!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

}
